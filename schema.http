# 기본으로 쏘면 avro로 바꿔서 보내줌

POST http://localhost:8081/subjects/User-value/versions
Content-Type: application/vnd.schemaregistry.v1+json

{
  "schema": "{\"type\":\"record\",\"name\":\"User\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"age\",\"type\":\"int\"}]}"
}


### protobuf로 보내기
POST http://localhost:8081/subjects/User-value/versions
Content-Type: application/vnd.schemaregistry.v1+json



###



## 새로운 커넥터를 등록한다.
POST http://localhost:8083/connectors/
Accept: application/json
Content-Type: application/json

{
  "name": "protobuf-source-connector",
  "config": {
    "connector.class": "io.debezium.connector.mysql.MySqlConnector",
    "tasks.max": "1",
    "database.hostname": "mysql-kafka",
    "database.port": "3306",
    "database.user": "root",
    "database.password": "password",
    "database.allowPublicKeyRetrieval": "false",
    "database.server.id": "10000",
    "database.include.list": "kafka",
    "topic.prefix": "demo2",
    "schema.history.internal.kafka.bootstrap.servers": "PLAINTEXT://Kafka00Service:9092,PLAINTEXT://Kafka01Service:9092,PLAINTEXT://Kafka02Service:9092",
    "schema.history.internal.kafka.topic": "schema-changes.demo2",
    "key.converter": "org.apache.kafka.connect.storage.StringConverter",
    "value.converter": "io.confluent.connect.protobuf.ProtobufConverter",
    "value.converter.schema.registry.url": "http://schema-registry:8081",
    "database.history.kafka.bootstrap.servers": "PLAINTEXT://Kafka00Service:9092,PLAINTEXT://Kafka01Service:9092,PLAINTEXT://Kafka02Service:9092",
    "database.history.kafka.topic": "schema-changes.demo2"

  }
}



### "key.converter": "io.confluent.connect.protobuf.ProtobufConverter",
###     "key.converter.schema.registry.url": "http://schema-registry:8081",


### 새로운 커넥터를 등록한다.
POST http://localhost:8083/connectors/
Accept: application/json
Content-Type: application/json

{"name": "redis-sink2",
  "config": {
    "connector.class":"com.redis.kafka.connect.RedisSinkConnector",
    "tasks.max":"1",
    "topics":"demo2.kafka.sample_table",
    "redis.insecure": "true",
    "redis.command": "HSET",
    "redis.uri":"redis://redis-kafka:6379",
    "key.converter": "org.apache.kafka.connect.storage.StringConverter",
    "value.converter": "io.confluent.connect.protobuf.ProtobufConverter",
    "value.converter.schema.registry.url": "http://schema-registry:8081"
  }
}


### 등록한 커넥터를 조회한다.
GET http://localhost:8083/connectors/


### 등록한 커넥터를 삭제한다.
@connectorName = ubank-transaction-connector-06
DELETE http://localhost:8083/connectors/demo01